
  /*
  This file is part of "GMP Clearview" package.
  Copyright (C)  2025 Infotrust 
  Alina Zilbergerts, Trish Dothkar,
  -- */


config {
    type: "view",
    tags: ["wam","reporting", "prod","view"],
    // materialized: true,    -- cannot materialized due to COUNT DISTINCT
    database: dataform.projectConfig.vars.OUTPUT_PROJECT,
    schema: dataform.projectConfig.vars.REPORTING_DATASET,
    dependencies: ["base_ga4_events"]
}

 -- WAM-funnel - BASE GA4 events table
with ga4_prep AS (
    SELECT
        event_date, 
        user_pseudo_id,
         event_name,
         session_id,
         session_info.engaged_session_id,
         ecommerce.transaction_id,
         ecommerce.purchase_revenue 
     FROM ${ref("base_ga4_events")}

    --REPLACED the above with PRECALCULATED flattened GA4 data table
     --SELECT event_date, session_id, engaged_session_id, transaction_id, purchase_revenue
     -- FROM SallyBeauty_GA_WEB.ga4_sessions --wam_baseline_funnel 
)

SELECT   
'1' as step,
'Sessions' AS metric,
CAST(FORMAT('%d', COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK
        AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN session_id 
        END)) AS STRING) AS WTD,

CAST(FORMAT('%d', COUNT(DISTINCT CASE 
    WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
    AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id 
    END)) AS STRING) AS MTD,
CAST(FORMAT('%d', COUNT(DISTINCT CASE 
        WHEN event_date >= 
               CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN session_id
        END)) AS STRING) AS QTD,

CAST(FORMAT('%d', COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)   THEN session_id 
        END)) AS STRING) AS YTD

FROM ga4_prep


union all
SELECT   
'2' as step,
'Engaged Sessions' AS metric,
CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK
        AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN engaged_session_id 
        END) AS STRING) AS WTD,

CAST(COUNT(DISTINCT CASE 
    WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
    AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id 
    END) AS STRING) AS MTD,

CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= 
             CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN engaged_session_id
        END) AS STRING) AS QTD,

CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)   THEN engaged_session_id 
        END) AS STRING) AS YTD
FROM ga4_prep

union all
SELECT 
    '3' AS step,
    '% of Engaged Sessions' AS metric,
    CONCAT(ROUND(SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN engaged_session_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN session_id END)
    ) * 100, 2), '%') AS WTD,
    
    CONCAT(ROUND(SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100, 2), '%') AS MTD,

    CONCAT(ROUND(SAFE_DIVIDE(
       COUNT (DISTINCT CASE WHEN event_date >= 
               CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END),
        COUNT(DISTINCT CASE WHEN event_date >= 
               CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100, 2), '%') AS QTD,
    
    CONCAT(ROUND(SAFE_DIVIDE(
        COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END),
        COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100, 2), '%') AS YTD

FROM ga4_prep

UNION ALL
SELECT  
    '4' as step, 
    'Transactions' AS metric,

    CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK
        AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN transaction_id 
        END) AS STRING) AS WTD,

    CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id 
        END) AS STRING) AS MTD,

    CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= 
               CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN transaction_id  
        END) AS STRING) AS QTD,

    CAST(COUNT(DISTINCT CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN transaction_id   
        END) AS STRING) AS YTD
FROM ga4_prep

UNION ALL
SELECT  
    '5' as step,
    'CVR' AS metric,

    -- WTD (Week-To-Date) CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                            AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                            AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN session_id END)
    ) * 100), '%') AS WTD,

    -- MTD (Month-To-Date) CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100), '%') AS MTD,

    -- QTD (Quarter-To-Date) CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= 
             CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= 
              CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100), '%') AS QTD,

    -- YTD (Year-To-Date) CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN session_id END)
    ) * 100), '%') AS YTD



FROM ga4_prep
union all

SELECT 
    '6' as step,
    'Engaged CVR' AS metric,

    -- WTD (Week-To-Date) Engaged CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                            AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                            AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN engaged_session_id END)
    ) * 100), '%') AS WTD,

    -- MTD (Month-To-Date) Engaged CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END)
    ) * 100), '%') AS MTD,

    -- QTD (Quarter-To-Date) Engaged CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= 
             CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= 
              CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END)
    ) * 100), '%') AS QTD,

    -- YTD (Year-To-Date) Engaged CVR in Decimal and Percentage
    CONCAT(FORMAT('%.2f', SAFE_DIVIDE(
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN engaged_session_id END)
    ) * 100), '%') AS YTD

FROM ga4_prep
UNION ALL

SELECT 
    '7' as step,
    'AOV' AS metric,

    -- WTD (Week-To-Date) AOV in Currency Format
    CONCAT('$', FORMAT('%.2f', SAFE_DIVIDE(
        SUM(CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                 AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN purchase_revenue END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK 
                            AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN transaction_id END)
    ))) AS WTD,

    -- MTD (Month-To-Date) AOV in Currency Format
    CONCAT('$', FORMAT('%.2f', SAFE_DIVIDE(
        SUM(CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                 AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN purchase_revenue END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH) 
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END)
    ))) AS MTD,

    -- QTD (Quarter-To-Date) AOV in Currency Format
    CONCAT('$', FORMAT('%.2f', SAFE_DIVIDE(
        SUM(CASE WHEN event_date >= 
              CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN purchase_revenue END),
        COUNT(DISTINCT CASE WHEN event_date >= 
              CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END)
    ))) AS QTD,

    -- YTD (Year-To-Date) AOV in Currency Format
    CONCAT('$', FORMAT('%.2f', SAFE_DIVIDE(
        SUM(CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                 AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN purchase_revenue END),
        COUNT(DISTINCT CASE WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
                            AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN transaction_id END)
    ))) AS YTD

FROM ga4_prep
UNION ALL

SELECT   
'8' as step,
'Revenue' AS metric,
CONCAT('$', FORMAT('%.2f', ROUND(SUM(CASE 
        WHEN event_date >= DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) - INTERVAL 1 WEEK
        AND event_date < DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)) THEN purchase_revenue  
        END), 2))) AS WTD,

CONCAT('$', FORMAT('%.2f', ROUND(SUM(CASE 
        WHEN event_date >= DATE_TRUNC(DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY) THEN purchase_revenue  
        END), 2))) AS MTD,

CONCAT('$', FORMAT('%.2f', ROUND(SUM(CASE 
        WHEN event_date >= 
              CASE 
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 10 AND 12 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 10, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 1 AND 3 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 1, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 4 AND 6 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 4, 1)
                WHEN EXTRACT(MONTH FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)) BETWEEN 7 AND 9 THEN DATE(EXTRACT(YEAR FROM  DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)), 7, 1)
            END
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN purchase_revenue   
        END), 2))) AS QTD,


CONCAT('$', FORMAT('%.2f', ROUND(SUM(CASE 
        WHEN event_date >= DATE_TRUNC(DATE(EXTRACT(YEAR FROM CURRENT_DATE()) - IF(EXTRACT(MONTH FROM CURRENT_DATE()) < 10, 1, 0), 10, 1), MONTH)
        AND event_date <= DATE_SUB(DATE_TRUNC(CURRENT_DATE(), WEEK(SUNDAY)), INTERVAL 1 DAY)  THEN purchase_revenue    
        END), 2))) AS YTD
FROM ga4_prep


ORDER BY 1